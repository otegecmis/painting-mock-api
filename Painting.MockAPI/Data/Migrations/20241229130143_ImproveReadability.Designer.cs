// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Painting.MockAPI.Data;

#nullable disable

namespace Painting.MockAPI.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241229130143_ImproveReadability")]
    partial class ImproveReadability
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Painting.MockAPI.Entities.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Leonardo da Vinci"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Vincent van Gogh"
                        });
                });

            modelBuilder.Entity("Painting.MockAPI.Entities.Artwork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArtistId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MuseumId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("MuseumId");

                    b.ToTable("Artworks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            MuseumId = 1,
                            Name = "Mona Lisa"
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            MuseumId = 2,
                            Name = "Starry Night"
                        });
                });

            modelBuilder.Entity("Painting.MockAPI.Entities.Museum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Museums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Louvre"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Van Gogh Museum"
                        });
                });

            modelBuilder.Entity("Painting.MockAPI.Entities.Artwork", b =>
                {
                    b.HasOne("Painting.MockAPI.Entities.Artist", "Artist")
                        .WithMany("Artworks")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Painting.MockAPI.Entities.Museum", "Museum")
                        .WithMany("Artworks")
                        .HasForeignKey("MuseumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Museum");
                });

            modelBuilder.Entity("Painting.MockAPI.Entities.Artist", b =>
                {
                    b.Navigation("Artworks");
                });

            modelBuilder.Entity("Painting.MockAPI.Entities.Museum", b =>
                {
                    b.Navigation("Artworks");
                });
#pragma warning restore 612, 618
        }
    }
}
